name: push-ci-images

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-push-image:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: '1.20'
          check-latest: true
          cache: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34 # v2.7.0

      - uses: sigstore/cosign-installer@dd6b2e2b610a11fd73dd187a43d57cc1394e35f9 # v3.0.5

      - uses: anchore/sbom-action/download-syft@4d571ad1038a9cc29d676154ef265ab8f9027042 # v0.14.2

      - uses: goreleaser/goreleaser-action@336e29918d653399e599bfca99fadc1d7ffbc9f7 # v4.3.0
        with:
          install-only: true

      - name: run goreleaser-snapshot
        run: |
          make goreleaser-snapshot
          docker images
          docker run falcosecurity/falcosidekick:latest-amd64 --version
          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version
        env:
          GOPATH: /home/runner/go

      # Push images to DockerHUB
      - name: Login to Docker Hub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Push images to Dockerhub
        run: |
          docker push falcosecurity/falcosidekick:latest-amd64
          docker push falcosecurity/falcosidekick:latest-arm64
          docker push falcosecurity/falcosidekick:latest-armv7
          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \
            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7
          docker manifest push --purge falcosecurity/falcosidekick:latest

      # Push images to AWS Public ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          role-to-assume: arn:aws:iam::292999226676:role/github_actions-falcosidekick-ecr
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@e407df249e6c155d03c0e4375f34bc2385f52d65 # v1.6.1
        with:
          registry-type: public

      - run: |
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7
          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \
            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7
          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest
