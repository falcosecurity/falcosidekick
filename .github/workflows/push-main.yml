name: push-ci-images

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-push-image:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: '1.20'
          check-latest: true
          cache: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2.9.1

      - uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # v3.1.1

      - uses: anchore/sbom-action/download-syft@78fc58e266e87a38d4194b2137a3d4e9bcaf7ca1 # v0.14.3

      - uses: goreleaser/goreleaser-action@3fa32b8bb5620a2c1afe798654bbad59f9da4906 # v4.4.0
        with:
          install-only: true

      - name: run goreleaser-snapshot
        run: |
          make goreleaser-snapshot
          docker images
          docker run falcosecurity/falcosidekick:latest-amd64 --version
          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version
        env:
          GOPATH: /home/runner/go

      # Push images to DockerHUB
      - name: Login to Docker Hub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Push images to Dockerhub
        run: |
          docker push falcosecurity/falcosidekick:latest-amd64
          docker push falcosecurity/falcosidekick:latest-arm64
          docker push falcosecurity/falcosidekick:latest-armv7
          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \
            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7
          docker manifest push --purge falcosecurity/falcosidekick:latest

      # Push images to AWS Public ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          role-to-assume: arn:aws:iam::292999226676:role/github_actions-falcosidekick-ecr
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@2fc7aceee09e9e4a7105c0d060c656fad0b4f63d # v1.7.0
        with:
          registry-type: public

      - run: |
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7
          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \
            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7
          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest
