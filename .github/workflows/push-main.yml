name: push-ci-images

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-push-image:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.23'
          check-latest: true
          cache: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - uses: anchore/sbom-action/download-syft@da167eac915b4e86f08b264dbdbc867b61be6f0c # v0.20.5

      - uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          install-only: true

      - name: run goreleaser-snapshot
        run: |
          make goreleaser-snapshot
          docker images
          docker run falcosecurity/falcosidekick:latest-amd64 --version
          docker run public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 --version
        env:
          GOPATH: /home/runner/go

      # Push images to DockerHUB
      - name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Push images to Dockerhub
        run: |
          docker push falcosecurity/falcosidekick:latest-amd64
          docker push falcosecurity/falcosidekick:latest-arm64
          docker push falcosecurity/falcosidekick:latest-armv7
          docker manifest create --amend falcosecurity/falcosidekick:latest falcosecurity/falcosidekick:latest-amd64 \
            falcosecurity/falcosidekick:latest-arm64 falcosecurity/falcosidekick:latest-armv7
          docker manifest push --purge falcosecurity/falcosidekick:latest

      # Push images to AWS Public ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::292999226676:role/github_actions-falcosidekick-ecr
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      - run: |
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-amd64
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-arm64
          docker push public.ecr.aws/falcosecurity/falcosidekick:latest-armv7
          docker manifest create --amend public.ecr.aws/falcosecurity/falcosidekick:latest public.ecr.aws/falcosecurity/falcosidekick:latest-amd64 \
            public.ecr.aws/falcosecurity/falcosidekick:latest-arm64 public.ecr.aws/falcosecurity/falcosidekick:latest-armv7
          docker manifest push --purge public.ecr.aws/falcosecurity/falcosidekick:latest
